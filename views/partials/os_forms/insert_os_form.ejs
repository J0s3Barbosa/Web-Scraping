<div class="panel panel-default">
    <div class="panel-body">

        <h2>Insert OS</h2>

        <form id="myForm" name="myForm" action="/api/v1/os/new" method="post" onsubmit="return validateForm();">

            <div class="form-group">

                <label for="id_equipamento">Enter id_equipamento: </label>
                <input id="id_equipamento" type="Number" name="id_equipamento" class="form-control">
            </div>

            <div class="form-group">

                <label for="id_func">Enter id_func: </label>
                <input id="id_func" type="Number" name="id_func" class="form-control">
            </div>


            <div class="form-group">

                    <label for="os_status">Enter os_status: </label>
              <!-- <input id="os_status" type="text" name="os_status" class="form-control"> -->

                      <select  id="os_status" name="os_status" class="form-control"  >
                            <option selected="Selected" value="Aberta"  >Aberta</option>
                            <option value="Fechada">Fechada</option>
                          </select> 
            </div>

            <div class="form-group">

                <label for="texto_defeito">Enter texto_defeito: </label>
                <textarea id="texto_defeito" rows="5" type="text" name="texto_defeito" class="form-control"></textarea>
            </div>

            <button id="submit_data" type="submit" class="btn btn-primary">Insert Data</button>

        </form>
    </div>
</div>


<script>

    function validateForm() {
        var myForm_id_equipamento = document.forms["myForm"]["id_equipamento"].value;
        var myForm_id_func = document.forms["myForm"]["id_func"].value;
         var myForm_os_status = document.forms["myForm"]["os_status"].options;
        var myForm_texto_defeito = document.forms["myForm"]["texto_defeito"].value;
        validationList = [ myForm_id_equipamento, myForm_id_func, myForm_os_status, myForm_texto_defeito]

        finalValidation = []
        validationList.forEach(element => {
            if (element == "" || element == null) {
                finalValidation.push(element)
            }
        });

        if (finalValidation.length > 0) {
            alert(finalValidation.length + " Fields are empty! ");
            return false;
        }

    }


    $('#myForm').submit(function (event) {

        var e = document.getElementById("os_status");
var str_os_status = e.options[e.selectedIndex].text;


        var formData = {
            'id_equipamento': $('input[name=id_equipamento]').val(),
            'id_func': $('input[name=id_func]').val(),
             'os_status': str_os_status,
            'texto_defeito': $('textarea:input[name=texto_defeito]').val()
        };

        var tok = window.localStorage.getItem('token');
        console.log('window.localStorage.getItem(token- ' + tok)

        $.ajax({
            headers: { 'Authorization': tok },
            type: 'POST',
            url: '/api/v1/os/new',
            data: formData,
            dataType: 'json',
            encode: true
        })
            // using the done promise callback
            .done(function (data) {
                $("#myForm")[0].reset();
                $("#btnLoadRefreshData").click()
                var msg = 'Data Inserted '
                var msg_type = 'success'
                ShowMessage(msg, msg_type)
            }).fail(
                function (jqXHR, textStatus, errorThrown) {
                    var msg = jqXHR.responseText
                    var msg_type = 'error'
                    ShowMessage(msg, msg_type)
                }
            );

        event.preventDefault();
    });



</script>